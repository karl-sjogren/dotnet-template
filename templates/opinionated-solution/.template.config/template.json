{
  "$schema": "http://json.schemastore.org/template",
  "author": "Karl-Johan Sj√∂gren",
  "classifications": [
    "Opinionated",
    "Solution"
  ],
  "identity": "Karls.Templates.OpinionatedSolution",
  "groupIdentity": "Karls.Templates",
  "name": "Karls Opinionated Solution",
  "shortName": "karls-solution",
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "sourceName": "BASE_NAME",
  "preferNameDirectory": true,
  "defaultName": "SassyZebra",
  "sources": [
    {
      "modifiers": [
        {
          "exclude": [
            "src/BASE_NAME.Frontend/.yarn/cache/**",
            "src/BASE_NAME.Frontend/.yarn/install-state.gz",
            "src/BASE_NAME.Frontend/coverage/**",
            "src/BASE_NAME.Frontend/junit.xml",
            "src/BASE_NAME.Web/**",
            "**/yarn-error.log"
          ]
        },
        {
          "condition": "(!includeGithubActions)",
          "exclude": [
            ".github/workflows/**"
          ]
        },
        {
          "condition": "(!includeBenchmarkProject)",
          "exclude": [
            "benchmarks/**"
          ]
        },
        {
          "condition": "(!includeHttpClientSetup)",
          "exclude": [
            "src/BASE_NAME.Core/Common/HttpClientBase.cs",
            "src/BASE_NAME.Core/Exceptions/Http*",
            "test/BASE_NAME.TestHelpers/Http/**"
          ]
        },
        {
          "condition": "(!addFrontendProject)",
          "exclude": [
            "src/BASE_NAME.Frontend/**",
            ".github/workflows/dependabot-npm-and-yarn.yml",
            ".stylelintrc"
          ]
        }
      ]
    }
  ],
  "constraints": {
    "LTS ": {
      "type": "sdk-version",
      "args": [ "9.0.*" ]
    }
  },
  "guids": [
    "56b5d934-22d2-4d76-a1d4-9298a6bb4ab8",
    "2150E333-8FDC-42A3-9474-1A3956D46DE8",
    "FAE04EC0-301F-11D3-BF4B-00C04F79EFBC",
    "362B8B37-5E5D-4E36-B272-17E0D985B7A0",
    "C53909E3-1076-402E-981D-477C340599E7",
    "982AABDB-799C-4A5A-817B-421D100AAE99",
    "6E055661-9DD9-47EA-BFA4-E20862522A9C",
    "23CAAE77-3BA6-47E6-BE31-048D000E3FAC",
    "42D2B2C1-C0EA-40B8-9A50-6FE4C43C79C4",
    "7DC3C50C-8B09-4DB3-B4FA-3D26E87810E7",
    "32396585-F3DF-4216-81DF-6131E1FF498F"
  ],
  "symbols": {
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "displayName": "Skip restore",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    },
    "includeGithubActions": {
      "type": "parameter",
      "datatype": "bool",
      "displayName": "Include GitHub Actions",
      "description": "If set to false, skips adding dependabot settings and basic GitHub actions.",
      "defaultValue": "true"
    },
    "addFrontendProject": {
      "type": "parameter",
      "datatype": "bool",
      "displayName": "Add frontend project",
      "description": "If set to true, adds a Vite based frontend project (includes Yarn, Vite, Vitest, Eslint, etc).",
      "defaultValue": "false"
    },
    "includeHttpClientSetup": {
      "type": "parameter",
      "datatype": "bool",
      "displayName": "Include HttpClient setup",
      "description": "If set to true, adds a base class for HttpClient with better error handling and testability.",
      "defaultValue": "false"
    },
    "includeBenchmarkProject": {
      "type": "parameter",
      "datatype": "bool",
      "displayName": "Include benchmark project",
      "description": "If set to true, adds a benchmark project based on BenchmarkDotNet.",
      "defaultValue": "true"
    }
  },
  "primaryOutputs": [
    {
      "path": "BASE_NAME.sln"
    }
  ],
  "postActions": [
    {
      "id": "restore",
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ],
  "SpeccialCustomOperations": {
    "**/*.md": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "actionableIf": [ "<!--#if" ],
            "actionableElse": [ "#else", "<!--#else" ],
            "actionableElseif": [ "#elseif", "<!--#elseif", "#elif", "<!--#elif" ],
            "endif": [ "#endif", "<!--#endif" ],
            "trim" : "true",
            "wholeLine": "true",
            "actions": [ "fixPseudoNestedComments" ]
          }
        },
        {
          "type": "balancednesting",
          "configuration": {
            "startToken": "<!--",
            "realEndToken": "-->",
            "pseudoEndToken": "-- >",
            "id": "fixPseudoNestedComments",
            "resetFlag": "_TestResetFlag_"
          }
        }
      ]
    }
  }
}
